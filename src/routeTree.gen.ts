/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as WalletUpdateEthereumChainRouteImport } from './routes/wallet/updateEthereumChain'
import { Route as WalletSwitchChainRouteImport } from './routes/wallet/switchChain'
import { Route as WalletAddEthereumChainRouteImport } from './routes/wallet/addEthereumChain'
import { Route as SignaturesEip712RouteImport } from './routes/signatures/eip712'
import { Route as SignaturesBasicRouteImport } from './routes/signatures/basic'
import { Route as EthuiGetProviderStateRouteImport } from './routes/ethui/getProviderState'
import { Route as EthuiGetContractAbiRouteImport } from './routes/ethui/getContractAbi'
import { Route as ContractsErc721RouteImport } from './routes/contracts/erc721'
import { Route as ContractsErc20RouteImport } from './routes/contracts/erc20'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const WalletUpdateEthereumChainRoute =
  WalletUpdateEthereumChainRouteImport.update({
    id: '/wallet/updateEthereumChain',
    path: '/wallet/updateEthereumChain',
    getParentRoute: () => rootRouteImport,
  } as any)
const WalletSwitchChainRoute = WalletSwitchChainRouteImport.update({
  id: '/wallet/switchChain',
  path: '/wallet/switchChain',
  getParentRoute: () => rootRouteImport,
} as any)
const WalletAddEthereumChainRoute = WalletAddEthereumChainRouteImport.update({
  id: '/wallet/addEthereumChain',
  path: '/wallet/addEthereumChain',
  getParentRoute: () => rootRouteImport,
} as any)
const SignaturesEip712Route = SignaturesEip712RouteImport.update({
  id: '/signatures/eip712',
  path: '/signatures/eip712',
  getParentRoute: () => rootRouteImport,
} as any)
const SignaturesBasicRoute = SignaturesBasicRouteImport.update({
  id: '/signatures/basic',
  path: '/signatures/basic',
  getParentRoute: () => rootRouteImport,
} as any)
const EthuiGetProviderStateRoute = EthuiGetProviderStateRouteImport.update({
  id: '/ethui/getProviderState',
  path: '/ethui/getProviderState',
  getParentRoute: () => rootRouteImport,
} as any)
const EthuiGetContractAbiRoute = EthuiGetContractAbiRouteImport.update({
  id: '/ethui/getContractAbi',
  path: '/ethui/getContractAbi',
  getParentRoute: () => rootRouteImport,
} as any)
const ContractsErc721Route = ContractsErc721RouteImport.update({
  id: '/contracts/erc721',
  path: '/contracts/erc721',
  getParentRoute: () => rootRouteImport,
} as any)
const ContractsErc20Route = ContractsErc20RouteImport.update({
  id: '/contracts/erc20',
  path: '/contracts/erc20',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/contracts/erc20': typeof ContractsErc20Route
  '/contracts/erc721': typeof ContractsErc721Route
  '/ethui/getContractAbi': typeof EthuiGetContractAbiRoute
  '/ethui/getProviderState': typeof EthuiGetProviderStateRoute
  '/signatures/basic': typeof SignaturesBasicRoute
  '/signatures/eip712': typeof SignaturesEip712Route
  '/wallet/addEthereumChain': typeof WalletAddEthereumChainRoute
  '/wallet/switchChain': typeof WalletSwitchChainRoute
  '/wallet/updateEthereumChain': typeof WalletUpdateEthereumChainRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/contracts/erc20': typeof ContractsErc20Route
  '/contracts/erc721': typeof ContractsErc721Route
  '/ethui/getContractAbi': typeof EthuiGetContractAbiRoute
  '/ethui/getProviderState': typeof EthuiGetProviderStateRoute
  '/signatures/basic': typeof SignaturesBasicRoute
  '/signatures/eip712': typeof SignaturesEip712Route
  '/wallet/addEthereumChain': typeof WalletAddEthereumChainRoute
  '/wallet/switchChain': typeof WalletSwitchChainRoute
  '/wallet/updateEthereumChain': typeof WalletUpdateEthereumChainRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/contracts/erc20': typeof ContractsErc20Route
  '/contracts/erc721': typeof ContractsErc721Route
  '/ethui/getContractAbi': typeof EthuiGetContractAbiRoute
  '/ethui/getProviderState': typeof EthuiGetProviderStateRoute
  '/signatures/basic': typeof SignaturesBasicRoute
  '/signatures/eip712': typeof SignaturesEip712Route
  '/wallet/addEthereumChain': typeof WalletAddEthereumChainRoute
  '/wallet/switchChain': typeof WalletSwitchChainRoute
  '/wallet/updateEthereumChain': typeof WalletUpdateEthereumChainRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/contracts/erc20'
    | '/contracts/erc721'
    | '/ethui/getContractAbi'
    | '/ethui/getProviderState'
    | '/signatures/basic'
    | '/signatures/eip712'
    | '/wallet/addEthereumChain'
    | '/wallet/switchChain'
    | '/wallet/updateEthereumChain'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/contracts/erc20'
    | '/contracts/erc721'
    | '/ethui/getContractAbi'
    | '/ethui/getProviderState'
    | '/signatures/basic'
    | '/signatures/eip712'
    | '/wallet/addEthereumChain'
    | '/wallet/switchChain'
    | '/wallet/updateEthereumChain'
  id:
    | '__root__'
    | '/'
    | '/contracts/erc20'
    | '/contracts/erc721'
    | '/ethui/getContractAbi'
    | '/ethui/getProviderState'
    | '/signatures/basic'
    | '/signatures/eip712'
    | '/wallet/addEthereumChain'
    | '/wallet/switchChain'
    | '/wallet/updateEthereumChain'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ContractsErc20Route: typeof ContractsErc20Route
  ContractsErc721Route: typeof ContractsErc721Route
  EthuiGetContractAbiRoute: typeof EthuiGetContractAbiRoute
  EthuiGetProviderStateRoute: typeof EthuiGetProviderStateRoute
  SignaturesBasicRoute: typeof SignaturesBasicRoute
  SignaturesEip712Route: typeof SignaturesEip712Route
  WalletAddEthereumChainRoute: typeof WalletAddEthereumChainRoute
  WalletSwitchChainRoute: typeof WalletSwitchChainRoute
  WalletUpdateEthereumChainRoute: typeof WalletUpdateEthereumChainRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/wallet/updateEthereumChain': {
      id: '/wallet/updateEthereumChain'
      path: '/wallet/updateEthereumChain'
      fullPath: '/wallet/updateEthereumChain'
      preLoaderRoute: typeof WalletUpdateEthereumChainRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/wallet/switchChain': {
      id: '/wallet/switchChain'
      path: '/wallet/switchChain'
      fullPath: '/wallet/switchChain'
      preLoaderRoute: typeof WalletSwitchChainRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/wallet/addEthereumChain': {
      id: '/wallet/addEthereumChain'
      path: '/wallet/addEthereumChain'
      fullPath: '/wallet/addEthereumChain'
      preLoaderRoute: typeof WalletAddEthereumChainRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signatures/eip712': {
      id: '/signatures/eip712'
      path: '/signatures/eip712'
      fullPath: '/signatures/eip712'
      preLoaderRoute: typeof SignaturesEip712RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signatures/basic': {
      id: '/signatures/basic'
      path: '/signatures/basic'
      fullPath: '/signatures/basic'
      preLoaderRoute: typeof SignaturesBasicRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ethui/getProviderState': {
      id: '/ethui/getProviderState'
      path: '/ethui/getProviderState'
      fullPath: '/ethui/getProviderState'
      preLoaderRoute: typeof EthuiGetProviderStateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ethui/getContractAbi': {
      id: '/ethui/getContractAbi'
      path: '/ethui/getContractAbi'
      fullPath: '/ethui/getContractAbi'
      preLoaderRoute: typeof EthuiGetContractAbiRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contracts/erc721': {
      id: '/contracts/erc721'
      path: '/contracts/erc721'
      fullPath: '/contracts/erc721'
      preLoaderRoute: typeof ContractsErc721RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contracts/erc20': {
      id: '/contracts/erc20'
      path: '/contracts/erc20'
      fullPath: '/contracts/erc20'
      preLoaderRoute: typeof ContractsErc20RouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ContractsErc20Route: ContractsErc20Route,
  ContractsErc721Route: ContractsErc721Route,
  EthuiGetContractAbiRoute: EthuiGetContractAbiRoute,
  EthuiGetProviderStateRoute: EthuiGetProviderStateRoute,
  SignaturesBasicRoute: SignaturesBasicRoute,
  SignaturesEip712Route: SignaturesEip712Route,
  WalletAddEthereumChainRoute: WalletAddEthereumChainRoute,
  WalletSwitchChainRoute: WalletSwitchChainRoute,
  WalletUpdateEthereumChainRoute: WalletUpdateEthereumChainRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
