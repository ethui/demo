/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as WalletUpdateEthereumChainImport } from './routes/wallet/updateEthereumChain'
import { Route as WalletSwitchChainImport } from './routes/wallet/switchChain'
import { Route as WalletAddEthereumChainImport } from './routes/wallet/addEthereumChain'
import { Route as SignaturesEip712Import } from './routes/signatures/eip712'
import { Route as SignaturesBasicImport } from './routes/signatures/basic'
import { Route as EthuiGetProviderStateImport } from './routes/ethui/getProviderState'
import { Route as EthuiGetContractAbiImport } from './routes/ethui/getContractAbi'
import { Route as ContractsErc721Import } from './routes/contracts/erc721'
import { Route as ContractsErc20Import } from './routes/contracts/erc20'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const WalletUpdateEthereumChainRoute = WalletUpdateEthereumChainImport.update({
  id: '/wallet/updateEthereumChain',
  path: '/wallet/updateEthereumChain',
  getParentRoute: () => rootRoute,
} as any)

const WalletSwitchChainRoute = WalletSwitchChainImport.update({
  id: '/wallet/switchChain',
  path: '/wallet/switchChain',
  getParentRoute: () => rootRoute,
} as any)

const WalletAddEthereumChainRoute = WalletAddEthereumChainImport.update({
  id: '/wallet/addEthereumChain',
  path: '/wallet/addEthereumChain',
  getParentRoute: () => rootRoute,
} as any)

const SignaturesEip712Route = SignaturesEip712Import.update({
  id: '/signatures/eip712',
  path: '/signatures/eip712',
  getParentRoute: () => rootRoute,
} as any)

const SignaturesBasicRoute = SignaturesBasicImport.update({
  id: '/signatures/basic',
  path: '/signatures/basic',
  getParentRoute: () => rootRoute,
} as any)

const EthuiGetProviderStateRoute = EthuiGetProviderStateImport.update({
  id: '/ethui/getProviderState',
  path: '/ethui/getProviderState',
  getParentRoute: () => rootRoute,
} as any)

const EthuiGetContractAbiRoute = EthuiGetContractAbiImport.update({
  id: '/ethui/getContractAbi',
  path: '/ethui/getContractAbi',
  getParentRoute: () => rootRoute,
} as any)

const ContractsErc721Route = ContractsErc721Import.update({
  id: '/contracts/erc721',
  path: '/contracts/erc721',
  getParentRoute: () => rootRoute,
} as any)

const ContractsErc20Route = ContractsErc20Import.update({
  id: '/contracts/erc20',
  path: '/contracts/erc20',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/contracts/erc20': {
      id: '/contracts/erc20'
      path: '/contracts/erc20'
      fullPath: '/contracts/erc20'
      preLoaderRoute: typeof ContractsErc20Import
      parentRoute: typeof rootRoute
    }
    '/contracts/erc721': {
      id: '/contracts/erc721'
      path: '/contracts/erc721'
      fullPath: '/contracts/erc721'
      preLoaderRoute: typeof ContractsErc721Import
      parentRoute: typeof rootRoute
    }
    '/ethui/getContractAbi': {
      id: '/ethui/getContractAbi'
      path: '/ethui/getContractAbi'
      fullPath: '/ethui/getContractAbi'
      preLoaderRoute: typeof EthuiGetContractAbiImport
      parentRoute: typeof rootRoute
    }
    '/ethui/getProviderState': {
      id: '/ethui/getProviderState'
      path: '/ethui/getProviderState'
      fullPath: '/ethui/getProviderState'
      preLoaderRoute: typeof EthuiGetProviderStateImport
      parentRoute: typeof rootRoute
    }
    '/signatures/basic': {
      id: '/signatures/basic'
      path: '/signatures/basic'
      fullPath: '/signatures/basic'
      preLoaderRoute: typeof SignaturesBasicImport
      parentRoute: typeof rootRoute
    }
    '/signatures/eip712': {
      id: '/signatures/eip712'
      path: '/signatures/eip712'
      fullPath: '/signatures/eip712'
      preLoaderRoute: typeof SignaturesEip712Import
      parentRoute: typeof rootRoute
    }
    '/wallet/addEthereumChain': {
      id: '/wallet/addEthereumChain'
      path: '/wallet/addEthereumChain'
      fullPath: '/wallet/addEthereumChain'
      preLoaderRoute: typeof WalletAddEthereumChainImport
      parentRoute: typeof rootRoute
    }
    '/wallet/switchChain': {
      id: '/wallet/switchChain'
      path: '/wallet/switchChain'
      fullPath: '/wallet/switchChain'
      preLoaderRoute: typeof WalletSwitchChainImport
      parentRoute: typeof rootRoute
    }
    '/wallet/updateEthereumChain': {
      id: '/wallet/updateEthereumChain'
      path: '/wallet/updateEthereumChain'
      fullPath: '/wallet/updateEthereumChain'
      preLoaderRoute: typeof WalletUpdateEthereumChainImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/contracts/erc20': typeof ContractsErc20Route
  '/contracts/erc721': typeof ContractsErc721Route
  '/ethui/getContractAbi': typeof EthuiGetContractAbiRoute
  '/ethui/getProviderState': typeof EthuiGetProviderStateRoute
  '/signatures/basic': typeof SignaturesBasicRoute
  '/signatures/eip712': typeof SignaturesEip712Route
  '/wallet/addEthereumChain': typeof WalletAddEthereumChainRoute
  '/wallet/switchChain': typeof WalletSwitchChainRoute
  '/wallet/updateEthereumChain': typeof WalletUpdateEthereumChainRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/contracts/erc20': typeof ContractsErc20Route
  '/contracts/erc721': typeof ContractsErc721Route
  '/ethui/getContractAbi': typeof EthuiGetContractAbiRoute
  '/ethui/getProviderState': typeof EthuiGetProviderStateRoute
  '/signatures/basic': typeof SignaturesBasicRoute
  '/signatures/eip712': typeof SignaturesEip712Route
  '/wallet/addEthereumChain': typeof WalletAddEthereumChainRoute
  '/wallet/switchChain': typeof WalletSwitchChainRoute
  '/wallet/updateEthereumChain': typeof WalletUpdateEthereumChainRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/contracts/erc20': typeof ContractsErc20Route
  '/contracts/erc721': typeof ContractsErc721Route
  '/ethui/getContractAbi': typeof EthuiGetContractAbiRoute
  '/ethui/getProviderState': typeof EthuiGetProviderStateRoute
  '/signatures/basic': typeof SignaturesBasicRoute
  '/signatures/eip712': typeof SignaturesEip712Route
  '/wallet/addEthereumChain': typeof WalletAddEthereumChainRoute
  '/wallet/switchChain': typeof WalletSwitchChainRoute
  '/wallet/updateEthereumChain': typeof WalletUpdateEthereumChainRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/contracts/erc20'
    | '/contracts/erc721'
    | '/ethui/getContractAbi'
    | '/ethui/getProviderState'
    | '/signatures/basic'
    | '/signatures/eip712'
    | '/wallet/addEthereumChain'
    | '/wallet/switchChain'
    | '/wallet/updateEthereumChain'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/contracts/erc20'
    | '/contracts/erc721'
    | '/ethui/getContractAbi'
    | '/ethui/getProviderState'
    | '/signatures/basic'
    | '/signatures/eip712'
    | '/wallet/addEthereumChain'
    | '/wallet/switchChain'
    | '/wallet/updateEthereumChain'
  id:
    | '__root__'
    | '/'
    | '/contracts/erc20'
    | '/contracts/erc721'
    | '/ethui/getContractAbi'
    | '/ethui/getProviderState'
    | '/signatures/basic'
    | '/signatures/eip712'
    | '/wallet/addEthereumChain'
    | '/wallet/switchChain'
    | '/wallet/updateEthereumChain'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ContractsErc20Route: typeof ContractsErc20Route
  ContractsErc721Route: typeof ContractsErc721Route
  EthuiGetContractAbiRoute: typeof EthuiGetContractAbiRoute
  EthuiGetProviderStateRoute: typeof EthuiGetProviderStateRoute
  SignaturesBasicRoute: typeof SignaturesBasicRoute
  SignaturesEip712Route: typeof SignaturesEip712Route
  WalletAddEthereumChainRoute: typeof WalletAddEthereumChainRoute
  WalletSwitchChainRoute: typeof WalletSwitchChainRoute
  WalletUpdateEthereumChainRoute: typeof WalletUpdateEthereumChainRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ContractsErc20Route: ContractsErc20Route,
  ContractsErc721Route: ContractsErc721Route,
  EthuiGetContractAbiRoute: EthuiGetContractAbiRoute,
  EthuiGetProviderStateRoute: EthuiGetProviderStateRoute,
  SignaturesBasicRoute: SignaturesBasicRoute,
  SignaturesEip712Route: SignaturesEip712Route,
  WalletAddEthereumChainRoute: WalletAddEthereumChainRoute,
  WalletSwitchChainRoute: WalletSwitchChainRoute,
  WalletUpdateEthereumChainRoute: WalletUpdateEthereumChainRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/contracts/erc20",
        "/contracts/erc721",
        "/ethui/getContractAbi",
        "/ethui/getProviderState",
        "/signatures/basic",
        "/signatures/eip712",
        "/wallet/addEthereumChain",
        "/wallet/switchChain",
        "/wallet/updateEthereumChain"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/contracts/erc20": {
      "filePath": "contracts/erc20.tsx"
    },
    "/contracts/erc721": {
      "filePath": "contracts/erc721.tsx"
    },
    "/ethui/getContractAbi": {
      "filePath": "ethui/getContractAbi.tsx"
    },
    "/ethui/getProviderState": {
      "filePath": "ethui/getProviderState.tsx"
    },
    "/signatures/basic": {
      "filePath": "signatures/basic.tsx"
    },
    "/signatures/eip712": {
      "filePath": "signatures/eip712.tsx"
    },
    "/wallet/addEthereumChain": {
      "filePath": "wallet/addEthereumChain.tsx"
    },
    "/wallet/switchChain": {
      "filePath": "wallet/switchChain.tsx"
    },
    "/wallet/updateEthereumChain": {
      "filePath": "wallet/updateEthereumChain.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
